services:
#  postgres-auth-db:
#    image: postgres:15
#    container_name: postgres-auth-db
#    restart: unless-stopped
#    env_file:
#      - ./services/auth-service/.env
#    ports:
#      - "${AUTH_DB_PORT}:5432"
#    volumes:
#      - postgres_auth_data:/var/lib/postgresql/data
#    networks:
#      - msa-network
#
#  postgres-user-db:
#    image: postgres:15
#    container_name: postgres-user-db
#    restart: unless-stopped
#    env_file:
#      - ./services/user-service/.env
#    ports:
#      - "${USER_DB_PORT}:5432"
#    volumes:
#      - postgres_user_data:/var/lib/postgresql/data
#    networks:
#      - msa-network

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - msa-network

  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    env_file:
      - .env
      - ./services/auth-service/.env
    depends_on:
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - msa-network

  user-service:
    build: ./services/user-service
    container_name: user-service
    ports:
      - "${USER_PORT}:${USER_PORT}"
    env_file:
      - .env
      - ./services/user-service/.env
    depends_on: []
    networks:
      - msa-network

  gateway:
    build: ./gateway
    container_name: api-gateway
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
      - ./gateway/.env
    depends_on:
      - auth-service
      - user-service
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - msa-network

volumes:
  postgres_auth_data:
  postgres_user_data:

networks:
  msa-network:
    driver: bridge
